/*!****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[14].oneOf[3].use[1]!./node_modules/next/dist/build/webpack/loaders/next-font-loader/index.js??ruleSet[1].rules[14].oneOf[3].use[2]!./node_modules/next/font/local/target.css?{"path":"node_modules\\geist\\dist\\sans.js","import":"","arguments":[{"src":"./fonts/geist-sans/Geist-Variable.woff2","variable":"--font-geist-sans","weight":"100 900"}],"variableName":"GeistSans"} ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
@tailwind base;
@tailwind components;
@tailwind utilities;
  @font-face {
    font-family: '__GeistSans_fb8f2c';
    src: url(/_next/static/media/028c0d39d2e8f589-s.p.woff2) format('woff2');
    font-display: swap;
    font-weight: 100 900;
}

@font-face {
    font-family: '__GeistSans_Fallback_fb8f2c';
    src: local("Arial");
    ascent-override: 85.83%;
    descent-override: 20.53%;
    line-gap-override: 9.33%;
    size-adjust: 107.19%
}

.__className_fb8f2c {
    font-family: '__GeistSans_fb8f2c', '__GeistSans_Fallback_fb8f2c'
}

.__variable_fb8f2c {
    --font-geist-sans: '__GeistSans_fb8f2c', '__GeistSans_Fallback_fb8f2c'
}


  !*** css ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[14].oneOf[3].use[1]!./node_modules/next/dist/build/webpack/loaders/next-font-loader/index.js??ruleSet[1].rules[14].oneOf[3].use[2]!./node_modules/next/font/local/target.css?{"path":"node_modules\\geist\\dist\\mono.js","import":"","arguments":[{"src":"./fonts/geist-mono/GeistMono-Variable.woff2","variable":"--font-geist-mono","adjustFontFallback":false,"fallback":["ui-monospace","SFMono-Regular","Roboto Mono","Menlo","Monaco","Liberation Mono","DejaVu Sans Mono","Courier New","monospace"],"weight":"100 900"}],"variableName":"GeistMono"} ***!

@font-face {
    font-family: '__GeistMono_f910ec';
    src: url(/_next/static/media/5b01f339abf2f1a5.p.woff2) format('woff2');
    font-display: swap;
    font-weight: 100 900;
}

.__className_f910ec {
    font-family: '__GeistMono_f910ec', ui-monospace, SFMono-Regular, Roboto Mono, Menlo, Monaco, Liberation Mono, DejaVu Sans Mono, Courier New, monospace
}

.__variable_f910ec {
    --font-geist-mono: '__GeistMono_f910ec', ui-monospace, SFMono-Regular, Roboto Mono, Menlo, Monaco, Liberation Mono, DejaVu Sans Mono, Courier New, monospace
}

/*!*************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[14].oneOf[12].use[2]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[14].oneOf[12].use[3]!./app/globals.css ***!
  \*************************************************************************************************************************************************************************************************************************************************************/
/*! tailwindcss v4.1.13 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;

@layer theme {

    :root,
    :host {
        --color-red-50: oklch(97.1% 0.013 17.38);
        --color-red-100: oklch(93.6% 0.032 17.717);
        --color-red-600: oklch(57.7% 0.245 27.325);
        --color-red-800: oklch(44.4% 0.177 26.899);
        --color-orange-50: oklch(98% 0.016 73.684);
        --color-orange-100: oklch(95.4% 0.038 75.164);
        --color-orange-300: oklch(83.7% 0.128 66.29);
        --color-orange-400: oklch(75% 0.183 55.934);
        --color-orange-500: oklch(70.5% 0.213 47.604);
        --color-orange-600: oklch(64.6% 0.222 41.116);
        --color-orange-700: oklch(55.3% 0.195 38.402);
        --color-orange-800: oklch(47% 0.157 37.304);
        --color-amber-50: oklch(98.7% 0.022 95.277);
        --color-amber-400: oklch(82.8% 0.189 84.429);
        --color-amber-500: oklch(76.9% 0.188 70.08);
        --color-amber-600: oklch(66.6% 0.179 58.318);
        --color-yellow-50: oklch(98.7% 0.026 102.212);
        --color-yellow-400: oklch(85.2% 0.199 91.936);
        --color-yellow-600: oklch(68.1% 0.162 75.834);
        --color-green-50: oklch(98.2% 0.018 155.826);
        --color-green-100: oklch(96.2% 0.044 156.743);
        --color-green-500: oklch(72.3% 0.219 149.579);
        --color-green-600: oklch(62.7% 0.194 149.214);
        --color-green-800: oklch(44.8% 0.119 151.328);
        --color-blue-500: oklch(62.3% 0.214 259.815);
        --color-blue-600: oklch(54.6% 0.245 262.881);
        --color-gray-50: oklch(98.5% 0.002 247.839);
        --color-gray-200: oklch(92.8% 0.006 264.531);
        --color-gray-300: oklch(87.2% 0.01 258.338);
        --color-gray-400: oklch(70.7% 0.022 261.325);
        --color-gray-500: oklch(55.1% 0.027 264.364);
        --color-gray-600: oklch(44.6% 0.03 256.802);
        --color-gray-700: oklch(37.3% 0.034 259.733);
        --color-gray-900: oklch(21% 0.034 264.665);
        --color-white: #fff;
        --spacing: 0.25rem;
        --container-md: 28rem;
        --container-lg: 32rem;
        --container-5xl: 80rem;
        --text-xs: 0.75rem;
        --text-xs--line-height: calc(1 / 0.75);
        --text-sm: 0.875rem;
        --text-sm--line-height: calc(1.25 / 0.875);
        --text-base: 1rem;
        --text-base--line-height: calc(1.5 / 1);
        --text-lg: 1.125rem;
        --text-lg--line-height: calc(1.75 / 1.125);
        --text-xl: 1.25rem;
        --text-xl--line-height: calc(1.75 / 1.25);
        --text-2xl: 1.5rem;
        --text-2xl--line-height: calc(2 / 1.5);
        --text-3xl: 1.875rem;
        --text-3xl--line-height: calc(2.25 / 1.875);
        --text-4xl: 2.25rem;
        --text-4xl--line-height: calc(2.5 / 2.25);
        --text-5xl: 3rem;
        --text-5xl--line-height: 1;
        --font-weight-medium: 500;
        --font-weight-semibold: 600;
        --font-weight-bold: 700;
        --tracking-wider: 0.05em;
        --leading-tight: 1.25;
        --leading-relaxed: 1.625;
        --blur-sm: 8px;
        --blur-2xl: 40px;
        --blur-3xl: 64px;
        --default-transition-duration: 150ms;
        --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        --default-font-family: var(--font-geist-sans);
        --default-mono-font-family: var(--font-geist-mono);
    }
}

@layer base {

    *,
    ::after,
    ::before,
    ::backdrop,
    ::file-selector-button {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
        border: 0 solid;
    }

    html,
    :host {
        line-height: 1.5;
        -webkit-text-size-adjust: 100%;
        tab-size: 4;
        font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
        font-feature-settings: var(--default-font-feature-settings, normal);
        font-variation-settings: var(--default-font-variation-settings, normal);
        -webkit-tap-highlight-color: transparent;
    }

    hr {
        height: 0;
        color: inherit;
        border-top-width: 1px;
    }

    abbr:where([title]) {
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted;
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        font-size: inherit;
        font-weight: inherit;
    }

    a {
        color: inherit;
        -webkit-text-decoration: inherit;
        text-decoration: inherit;
    }

    b,
    strong {
        font-weight: bolder;
    }

    code,
    kbd,
    samp,
    pre {
        font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
        font-feature-settings: var(--default-mono-font-feature-settings, normal);
        font-variation-settings: var(--default-mono-font-variation-settings, normal);
        font-size: 1em;
    }

    small {
        font-size: 80%;
    }

    sub,
    sup {
        font-size: 75%;
        line-height: 0;
        position: relative;
        vertical-align: baseline;
    }

    sub {
        bottom: -0.25em;
    }

    sup {
        top: -0.5em;
    }

    table {
        text-indent: 0;
        border-color: inherit;
        border-collapse: collapse;
    }

    :-moz-focusring {
        outline: auto;
    }

    progress {
        vertical-align: baseline;
    }

    summary {
        display: list-item;
    }

    ol,
    ul,
    menu {
        list-style: none;
    }

    img,
    svg,
    video,
    canvas,
    audio,
    iframe,
    embed,
    object {
        display: block;
        vertical-align: middle;
    }

    img,
    video {
        max-width: 100%;
        height: auto;
    }

    button,
    input,
    select,
    optgroup,
    textarea,
    ::file-selector-button {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        border-radius: 0;
        background-color: transparent;
        opacity: 1;
    }

    :where(select:is([multiple], [size])) optgroup {
        font-weight: bolder;
    }

    :where(select:is([multiple], [size])) optgroup option {
        padding-inline-start: 20px;
    }

    ::file-selector-button {
        margin-inline-end: 4px;
    }

    ::placeholder {
        opacity: 1;
    }

    @supports (not (-webkit-appearance: -apple-pay-button)) or (contain-intrinsic-size: 1px) {
        ::placeholder {
            color: currentcolor;

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab, currentcolor 50%, transparent);
            }
        }
    }

    textarea {
        resize: vertical;
    }

    ::-webkit-search-decoration {
        -webkit-appearance: none;
    }

    ::-webkit-date-and-time-value {
        min-height: 1lh;
        text-align: inherit;
    }

    ::-webkit-datetime-edit {
        display: inline-flex;
    }

    ::-webkit-datetime-edit-fields-wrapper {
        padding: 0;
    }

    ::-webkit-datetime-edit,
    ::-webkit-datetime-edit-year-field,
    ::-webkit-datetime-edit-month-field,
    ::-webkit-datetime-edit-day-field,
    ::-webkit-datetime-edit-hour-field,
    ::-webkit-datetime-edit-minute-field,
    ::-webkit-datetime-edit-second-field,
    ::-webkit-datetime-edit-millisecond-field,
    ::-webkit-datetime-edit-meridiem-field {
        padding-block: 0;
    }

    ::-webkit-calendar-picker-indicator {
        line-height: 1;
    }

    :-moz-ui-invalid {
        box-shadow: none;
    }

    button,
    input:where([type="button"], [type="reset"], [type="submit"]),
    ::file-selector-button {
        appearance: button;
    }

    ::-webkit-inner-spin-button,
    ::-webkit-outer-spin-button {
        height: auto;
    }

    [hidden]:where(:not([hidden="until-found"])) {
        display: none !important;
    }
}

@layer utilities {
    .\@container\/card-header {
        container-type: inline-size;
        container-name: card-header;
    }

    .absolute {
        position: absolute;
    }

    .relative {
        position: relative;
    }

    .inset-0 {
        inset: calc(var(--spacing) * 0);
    }

    .top-1\/2 {
        top: calc(1/2 * 100%);
    }

    .top-20 {
        top: calc(var(--spacing) * 20);
    }

    .top-32 {
        top: calc(var(--spacing) * 32);
    }

    .right-16 {
        right: calc(var(--spacing) * 16);
    }

    .right-32 {
        right: calc(var(--spacing) * 32);
    }

    .right-80 {
        right: calc(var(--spacing) * 80);
    }

    .bottom-20 {
        bottom: calc(var(--spacing) * 20);
    }

    .bottom-32 {
        bottom: calc(var(--spacing) * 32);
    }

    .left-3 {
        left: calc(var(--spacing) * 3);
    }

    .left-20 {
        left: calc(var(--spacing) * 20);
    }

    .z-10 {
        z-index: 10;
    }

    .col-start-2 {
        grid-column-start: 2;
    }

    .row-span-2 {
        grid-row: span 2 / span 2;
    }

    .row-start-1 {
        grid-row-start: 1;
    }

    .mx-2 {
        margin-inline: calc(var(--spacing) * 2);
    }

    .mx-auto {
        margin-inline: auto;
    }

    .mt-1 {
        margin-top: calc(var(--spacing) * 1);
    }

    .mt-2 {
        margin-top: calc(var(--spacing) * 2);
    }

    .mt-4 {
        margin-top: calc(var(--spacing) * 4);
    }

    .mr-2 {
        margin-right: calc(var(--spacing) * 2);
    }

    .-mb-px {
        margin-bottom: -1px;
    }

    .mb-2 {
        margin-bottom: calc(var(--spacing) * 2);
    }

    .mb-3 {
        margin-bottom: calc(var(--spacing) * 3);
    }

    .mb-4 {
        margin-bottom: calc(var(--spacing) * 4);
    }

    .mb-6 {
        margin-bottom: calc(var(--spacing) * 6);
    }

    .mb-8 {
        margin-bottom: calc(var(--spacing) * 8);
    }

    .ml-2 {
        margin-left: calc(var(--spacing) * 2);
    }

    .ml-3 {
        margin-left: calc(var(--spacing) * 3);
    }

    .ml-4 {
        margin-left: calc(var(--spacing) * 4);
    }

    .block {
        display: block;
    }

    .flex {
        display: flex;
    }

    .grid {
        display: grid;
        flex-wrap: nowrap;
    }

    .hidden {
        display: none;
    }

    .inline-flex {
        display: inline-flex;
    }

    .size-9 {
        width: calc(var(--spacing) * 9);
        height: calc(var(--spacing) * 9);
    }

    .h-0\.5 {
        height: calc(var(--spacing) * 0.5);
    }

    .h-4 {
        height: calc(var(--spacing) * 4);
    }

    .h-5 {
        height: calc(var(--spacing) * 5);
    }

    .h-6 {
        height: calc(var(--spacing) * 6);
    }

    .h-8 {
        height: calc(var(--spacing) * 8);
    }

    .h-9 {
        height: calc(var(--spacing) * 9);
    }

    .h-10 {
        height: calc(var(--spacing) * 10);
    }

    .h-12 {
        height: calc(var(--spacing) * 12);
    }

    .h-64 {
        height: calc(var(--spacing) * 64);
    }

    .h-72 {
        height: calc(var(--spacing) * 72);
    }

    .h-80 {
        height: calc(var(--spacing) * 80);
    }

    .h-96 {
        height: calc(var(--spacing) * 96);
    }

    .min-h-screen {
        min-height: 100vh;
    }

    .w-4 {
        width: calc(var(--spacing) * 4);
    }

    .w-5 {
        width: calc(var(--spacing) * 5);
    }

    .w-6 {
        width: calc(var(--spacing) * 6);
    }

    .w-8 {
        width: calc(var(--spacing) * 8);
    }

    .w-10 {
        width: calc(var(--spacing) * 10);
    }

    .w-12 {
        width: calc(var(--spacing) * 12) !important;
    }

    .w-16 {
        width: calc(var(--spacing) * 16);
    }

    .w-64 {
        width: calc(var(--spacing) * 64);
    }

    .w-72 {
        width: calc(var(--spacing) * 72);
    }

    .w-80 {
        width: calc(var(--spacing) * 80);
    }

    .w-96 {
        width: calc(var(--spacing) * 96);
    }

    .w-fit {
        width: fit-content;
    }

    .w-full {
        width: 100%;
    }

    .max-w-5xl {
        max-width: var(--container-5xl);
    }

    .max-w-lg {
        max-width: var(--container-lg);
    }

    .max-w-md {
        max-width: var(--container-md);
    }

    .min-w-0 {
        min-width: calc(var(--spacing) * 0);
    }

    .min-w-full {
        min-width: 100%;
    }

    .flex-1 {
        flex: 1;
    }

    .shrink-0 {
        flex-shrink: 0;
    }

    .-translate-y-1\/2 {
        --tw-translate-y: calc(calc(1/2 * 100%) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .rotate-180 {
        rotate: 180deg;
    }

    .transform {
        transform: var(--tw-rotate-x, ) var(--tw-rotate-y, ) var(--tw-rotate-z, ) var(--tw-skew-x, ) var(--tw-skew-y, );
    }

    .auto-rows-min {
        grid-auto-rows: min-content;
    }

    .grid-cols-1 {
        grid-template-columns: repeat(1, minmax(0, 1fr));
    }

    .grid-cols-2 {
        grid-template-columns: repeat(2, minmax(0, 1fr));
    }

    .grid-rows-\[auto_auto\] {
        grid-template-rows: auto auto;
    }

    .flex-col {
        flex-direction: column;
    }

    .items-center {
        align-items: center;
    }

    .items-start {
        align-items: flex-start;
    }

    .justify-between {
        justify-content: space-between;
    }

    .justify-center {
        justify-content: center;
    }

    .justify-start {
        justify-content: flex-start;
    }

    .gap-1 {
        gap: calc(var(--spacing) * 1);
    }

    .gap-1\.5 {
        gap: calc(var(--spacing) * 1.5);
    }

    .gap-2 {
        gap: calc(var(--spacing) * 2);
    }

    .gap-3 {
        gap: calc(var(--spacing) * 3);
    }

    .gap-4 {
        gap: calc(var(--spacing) * 4);
    }

    .gap-6 {
        gap: calc(var(--spacing) * 6);
    }

    .gap-12 {
        gap: calc(var(--spacing) * 12);
    }

    .space-y-1 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .space-y-2 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .space-y-3 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .space-y-4 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .space-y-6 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .space-y-8 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .space-x-2 {
        :where(& > :not(:last-child)) {
            --tw-space-x-reverse: 0;
            margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
            margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
        }
    }

    .space-x-4 {
        :where(& > :not(:last-child)) {
            --tw-space-x-reverse: 0;
            margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
            margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
        }
    }

    .space-x-8 {
        :where(& > :not(:last-child)) {
            --tw-space-x-reverse: 0;
            margin-inline-start: calc(calc(var(--spacing) * 8) * var(--tw-space-x-reverse));
            margin-inline-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-x-reverse)));
        }
    }

    .divide-y {
        :where(& > :not(:last-child)) {
            --tw-divide-y-reverse: 0;
            border-bottom-style: var(--tw-border-style);
            border-top-style: var(--tw-border-style);
            border-top-width: calc(1px * var(--tw-divide-y-reverse));
            border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
        }
    }

    .divide-gray-200 {
        :where(& > :not(:last-child)) {
            border-color: var(--color-gray-200);
        }
    }

    .self-start {
        align-self: flex-start;
    }

    .justify-self-end {
        justify-self: flex-end;
    }

    .overflow-hidden {
        overflow: hidden;
    }

    .overflow-x-auto {
        overflow-x: auto;
    }

    .rounded-full {
        border-radius: calc(infinity * 1px);
    }

    .rounded-lg {
        border-radius: var(--radius);
    }

    .rounded-md {
        border-radius: calc(var(--radius) - 2px);
    }

    .rounded-xl {
        border-radius: calc(var(--radius) + 4px);
    }

    .border {
        border-style: var(--tw-border-style);
        border-width: 1px;
    }

    .border-0 {
        border-style: var(--tw-border-style);
        border-width: 0px;
    }

    .border-2 {
        border-style: var(--tw-border-style);
        border-width: 2px;
    }

    .border-r {
        border-right-style: var(--tw-border-style);
        border-right-width: 1px;
    }

    .border-b {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px;
    }

    .border-b-2 {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 2px;
    }

    .border-l-4 {
        border-left-style: var(--tw-border-style);
        border-left-width: 4px;
    }

    .border-gray-200 {
        border-color: var(--color-gray-200);
    }

    .border-gray-300 {
        border-color: var(--color-gray-300);
    }

    .border-input {
        border-color: var(--input);
    }

    .border-orange-500 {
        border-color: var(--color-orange-500);
    }

    .border-transparent {
        border-color: transparent;
    }

    .bg-background {
        background-color: var(--background);
    }

    .bg-blue-500 {
        background-color: var(--color-blue-500);
    }

    .bg-card {
        background-color: var(--card);
    }

    .bg-destructive {
        background-color: var(--destructive);
    }

    .bg-gray-50 {
        background-color: var(--color-gray-50);
    }

    .bg-gray-300 {
        background-color: var(--color-gray-300);
    }

    .bg-green-50 {
        background-color: var(--color-green-50);
    }

    .bg-green-100 {
        background-color: var(--color-green-100);
    }

    .bg-green-500 {
        background-color: var(--color-green-500);
    }

    .bg-orange-50 {
        background-color: var(--color-orange-50);
    }

    .bg-orange-100 {
        background-color: var(--color-orange-100);
    }

    .bg-orange-500 {
        background-color: var(--color-orange-500);
    }

    .bg-primary {
        background-color: var(--primary);
    }

    .bg-red-50 {
        background-color: var(--color-red-50);
    }

    .bg-red-100 {
        background-color: var(--color-red-100);
    }

    .bg-secondary {
        background-color: var(--secondary);
    }

    .bg-transparent {
        background-color: transparent;
    }

    .bg-white {
        background-color: var(--color-white);
    }

    .bg-white\/50 {
        background-color: color-mix(in srgb, #fff 50%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-white) 50%, transparent);
        }
    }

    .bg-white\/60 {
        background-color: color-mix(in srgb, #fff 60%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-white) 60%, transparent);
        }
    }

    .bg-white\/80 {
        background-color: color-mix(in srgb, #fff 80%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, #ffffffa6 80%, transparent) 
             /* color-mix(in oklab, var(--color-white) 80%, transparent); */
        }
    }

    .bg-gradient-to-br {
        --tw-gradient-position: to bottom right in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops));
    }

    .from-amber-400\/20 {
        --tw-gradient-from: color-mix(in srgb, oklch(82.8% 0.189 84.429) 20%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-from: color-mix(in oklab, var(--color-amber-400) 20%, transparent);
        }

        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .from-orange-50 {
        --tw-gradient-from: var(--color-orange-50);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .from-orange-300\/25 {
        --tw-gradient-from: color-mix(in srgb, oklch(83.7% 0.128 66.29) 25%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-from: color-mix(in oklab, var(--color-orange-300) 25%, transparent);
        }

        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .from-orange-400\/30 {
        --tw-gradient-from: color-mix(in srgb, oklch(75% 0.183 55.934) 30%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-from: color-mix(in oklab, var(--color-orange-400) 30%, transparent);
        }

        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .from-orange-500 {
        --tw-gradient-from: var(--color-orange-500);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .from-yellow-400\/25 {
        --tw-gradient-from: color-mix(in srgb, oklch(85.2% 0.199 91.936) 25%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-from: color-mix(in oklab, var(--color-yellow-400) 25%, transparent);
        }

        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .via-amber-50 {
        --tw-gradient-via: var(--color-amber-50);
        --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops);
    }

    .to-amber-400\/25 {
        --tw-gradient-to: color-mix(in srgb, oklch(82.8% 0.189 84.429) 25%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-to: color-mix(in oklab, var(--color-amber-400) 25%, transparent);
        }

        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .to-amber-400\/30 {
        --tw-gradient-to: color-mix(in srgb, oklch(82.8% 0.189 84.429) 30%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-to: color-mix(in oklab, var(--color-amber-400) 30%, transparent);
        }

        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .to-amber-500 {
        --tw-gradient-to: var(--color-amber-500);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .to-orange-400\/25 {
        --tw-gradient-to: color-mix(in srgb, oklch(75% 0.183 55.934) 25%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-to: color-mix(in oklab, var(--color-orange-400) 25%, transparent);
        }

        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .to-yellow-50 {
        --tw-gradient-to: var(--color-yellow-50);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .to-yellow-400\/20 {
        --tw-gradient-to: color-mix(in srgb, oklch(85.2% 0.199 91.936) 20%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-to: color-mix(in oklab, var(--color-yellow-400) 20%, transparent);
        }

        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .p-3 {
        padding: calc(var(--spacing) * 3);
    }

    .p-4 {
        padding: calc(var(--spacing) * 4);
    }

    .p-6 {
        padding: calc(var(--spacing) * 6);
    }

    .p-8 {
        padding: calc(var(--spacing) * 8);
    }

    .px-1 {
        padding-inline: calc(var(--spacing) * 1);
    }

    .px-2 {
        padding-inline: calc(var(--spacing) * 2);
    }

    .px-3 {
        padding-inline: calc(var(--spacing) * 3);
    }

    .px-4 {
        padding-inline: calc(var(--spacing) * 4);
    }

    .px-6 {
        padding-inline: calc(var(--spacing) * 6);
    }

    .px-8 {
        padding-inline: calc(var(--spacing) * 8);
    }

    .py-0\.5 {
        padding-block: calc(var(--spacing) * 0.5);
    }

    .py-1 {
        padding-block: calc(var(--spacing) * 1);
    }

    .py-2 {
        padding-block: calc(var(--spacing) * 2);
    }

    .py-3 {
        padding-block: calc(var(--spacing) * 3);
    }

    .py-4 {
        padding-block: calc(var(--spacing) * 4);
    }

    .py-6 {
        padding-block: calc(var(--spacing) * 6);
    }

    .py-12 {
        padding-block: calc(var(--spacing) * 12);
    }

    .pt-4 {
        padding-top: calc(var(--spacing) * 4);
    }

    .pt-6 {
        padding-top: calc(var(--spacing) * 6);
    }

    .pr-4 {
        padding-right: calc(var(--spacing) * 4);
    }

    .pl-10 {
        padding-left: calc(var(--spacing) * 10);
    }

    .text-center {
        text-align: center;
    }

    .text-left {
        text-align: left;
    }

    .font-sans {
        font-family: var(--font-geist-sans);
    }

    .text-2xl {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height));
    }

    .text-3xl {
        font-size: var(--text-3xl);
        line-height: var(--tw-leading, var(--text-3xl--line-height));
    }

    .text-4xl {
        font-size: var(--text-4xl);
        line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
        .text-5xl {
            font-size: var(--text-5xl) !important;
            line-height: var(--tw-leading, var(--text-5xl--line-height));
        }

    .text-base {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
    }

    .text-lg {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
    }

    .text-sm {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
    }

    .text-xl {
        font-size: var(--text-xl);
        line-height: var(--tw-leading, var(--text-xl--line-height));
    }

    .text-xs {
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
    }

    .leading-none {
        --tw-leading: 1;
        line-height: 1;
    }

    .leading-relaxed {
        --tw-leading: var(--leading-relaxed);
        line-height: var(--leading-relaxed);
    }

    .leading-tight {
        --tw-leading: var(--leading-tight);
        line-height: var(--leading-tight);
    }

    .font-bold {
        --tw-font-weight: var(--font-weight-bold);
        font-weight: var(--font-weight-bold);
    }

    .font-medium {
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
    }

    .font-semibold {
        --tw-font-weight: var(--font-weight-semibold);
        font-weight: var(--font-weight-semibold);
    }

    .tracking-wider {
        --tw-tracking: var(--tracking-wider);
        letter-spacing: var(--tracking-wider);
    }

    .whitespace-nowrap {
        white-space: nowrap;
    }

    .text-amber-600 {
        color: var(--color-amber-600);
    }

    .text-blue-600 {
        color: var(--color-blue-600);
    }

    .text-card-foreground {
        color: var(--card-foreground);
    }

    .text-foreground {
        color: var(--foreground);
    }

    .text-gray-400 {
        color: var(--color-gray-400);
    }

    .text-gray-500 {
        color: var(--color-gray-500);
    }

    .text-gray-600 {
        color: var(--color-gray-600);
    }

    .text-gray-700 {
        color: var(--color-gray-700);
    }

    .text-gray-900 {
        color: var(--color-gray-900);
    }

    .text-green-600 {
        color: var(--color-green-600);
    }

    .text-green-800 {
        color: var(--color-green-800);
    }

    .text-muted-foreground {
        color: var(--muted-foreground);
    }

    .text-orange-500 {
        color: var(--color-orange-500);
    }

    .text-orange-600 {
        color: var(--color-orange-600) !important;
    }

    .text-orange-700 {
        color: var(--color-orange-700);
    }

    .text-orange-800 {
        color: var(--color-orange-800);
    }

    .text-primary {
        color: var(--primary);
    }

    .text-primary-foreground {
        color: var(--primary-foreground);
    }

    .text-red-600 {
        color: var(--color-red-600);
    }

    .text-red-800 {
        color: var(--color-red-800);
    }

    .text-secondary-foreground {
        color: var(--secondary-foreground);
    }

    .text-white {
        color: var(--color-white);
    }

    .text-yellow-600 {
        color: var(--color-yellow-600);
    }

    .uppercase {
        text-transform: uppercase;
    }

    .underline-offset-4 {
        text-underline-offset: 4px;
    }

    .shadow-2xl {
        --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgb(0 0 0 / 0.25));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .shadow-sm {
        --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .shadow-xs {
        --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .outline {
        outline-style: var(--tw-outline-style);
        outline-width: 1px;
    }

    .blur-2xl {
        --tw-blur: blur(var(--blur-2xl));
        filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
    }

    .blur-3xl {
        --tw-blur: blur(var(--blur-3xl));
        filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
    }

    .backdrop-blur-sm {
        --tw-backdrop-blur: blur(var(--blur-sm));
        -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
        backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    }

    .transition-\[color\,box-shadow\] {
        transition-property: color, box-shadow;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .transition-all {
        transition-property: all;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .transition-transform {
        transition-property: transform, translate, scale, rotate;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .duration-300 {
        --tw-duration: 300ms;
        transition-duration: 300ms;
    }

    .outline-none {
        --tw-outline-style: none;
        outline-style: none;
    }

    .select-none {
        -webkit-user-select: none;
        user-select: none;
    }

    .group-data-\[disabled\=true\]\:pointer-events-none {
        &:is(:where(.group)[data-disabled="true"] *) {
            pointer-events: none;
        }
    }

    .group-data-\[disabled\=true\]\:opacity-50 {
        &:is(:where(.group)[data-disabled="true"] *) {
            opacity: 50%;
        }
    }

    .peer-disabled\:cursor-not-allowed {
        &:is(:where(.peer):disabled ~ *) {
            cursor: not-allowed;
        }
    }

    .peer-disabled\:opacity-50 {
        &:is(:where(.peer):disabled ~ *) {
            opacity: 50%;
        }
    }

    .selection\:bg-primary {
        & *::selection {
            background-color: var(--primary);
        }

        &::selection {
            background-color: var(--primary);
        }
    }

    .selection\:text-primary-foreground {
        & *::selection {
            color: var(--primary-foreground);
        }

        &::selection {
            color: var(--primary-foreground);
        }
    }

    .file\:inline-flex {
        &::file-selector-button {
            display: inline-flex;
        }
    }

    .file\:h-7 {
        &::file-selector-button {
            height: calc(var(--spacing) * 7);
        }
    }

    .file\:border-0 {
        &::file-selector-button {
            border-style: var(--tw-border-style);
            border-width: 0px;
        }
    }

    .file\:bg-transparent {
        &::file-selector-button {
            background-color: transparent;
        }
    }

    .file\:text-sm {
        &::file-selector-button {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
        }
    }

    .file\:font-medium {
        &::file-selector-button {
            --tw-font-weight: var(--font-weight-medium);
            font-weight: var(--font-weight-medium);
        }
    }

    .file\:text-foreground {
        &::file-selector-button {
            color: var(--foreground);
        }
    }

    .placeholder\:text-muted-foreground {
        &::placeholder {
            color: var(--muted-foreground);
        }
    }

    .hover\:border-gray-300 {
        &:hover {
            @media (hover: hover) {
                border-color: var(--color-gray-300);
            }
        }
    }

    .hover\:border-orange-500 {
        &:hover {
            @media (hover: hover) {
                border-color: var(--color-orange-500);
            }
        }
    }

    .hover\:bg-accent {
        &:hover {
            @media (hover: hover) {
                background-color: var(--accent);
            }
        }
    }

    .hover\:bg-destructive\/90 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--destructive);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
                }
            }
        }
    }

    .hover\:bg-orange-600 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--color-orange-600);
            }
        }
    }

    .hover\:bg-primary\/90 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--primary);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab, var(--primary) 90%, transparent);
                }
            }
        }
    }

    .hover\:bg-secondary\/80 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--secondary);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab, var(--secondary) 80%, transparent);
                }
            }
        }
    }

    .hover\:text-accent-foreground {
        &:hover {
            @media (hover: hover) {
                color: var(--accent-foreground);
            }
        }
    }

    .hover\:text-gray-700 {
        &:hover {
            @media (hover: hover) {
                color: var(--color-gray-700);
            }
        }
    }

    .hover\:text-orange-600 {
        &:hover {
            @media (hover: hover) {
                color: var(--color-orange-600);
            }
        }
    }

    .hover\:text-orange-700 {
        &:hover {
            @media (hover: hover) {
                color: var(--color-orange-700);
            }
        }
    }

    .hover\:underline {
        &:hover {
            @media (hover: hover) {
                text-decoration-line: underline;
            }
        }
    }

    .focus\:border-orange-500 {
        &:focus {
            border-color: var(--color-orange-500);
        }
    }

    .focus\:border-transparent {
        &:focus {
            border-color: transparent;
        }
    }

    .focus\:ring-2 {
        &:focus {
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
    }

    .focus\:ring-orange-500 {
        &:focus {
            --tw-ring-color: var(--color-orange-500);
        }
    }

    .focus\:outline-none {
        &:focus {
            --tw-outline-style: none;
            outline-style: none;
        }
    }

    .focus-visible\:border-ring {
        &:focus-visible {
            border-color: var(--ring);
        }
    }

    .focus-visible\:ring-\[3px\] {
        &:focus-visible {
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
    }

    .focus-visible\:ring-destructive\/20 {
        &:focus-visible {
            --tw-ring-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
            }
        }
    }

    .focus-visible\:ring-ring\/50 {
        &:focus-visible {
            --tw-ring-color: var(--ring);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
            }
        }
    }

    .disabled\:pointer-events-none {
        &:disabled {
            pointer-events: none;
        }
    }

    .disabled\:cursor-not-allowed {
        &:disabled {
            cursor: not-allowed;
        }
    }

    .disabled\:opacity-50 {
        &:disabled {
            opacity: 50%;
        }
    }

    .has-data-\[slot\=card-action\]\:grid-cols-\[1fr_auto\] {
        &:has(*[data-slot="card-action"]) {
            grid-template-columns: 1fr auto;
        }
    }

    .has-\[\>svg\]\:px-2\.5 {
        &:has(>svg) {
            padding-inline: calc(var(--spacing) * 2.5);
        }
    }

    .has-\[\>svg\]\:px-3 {
        &:has(>svg) {
            padding-inline: calc(var(--spacing) * 3);
        }
    }

    .has-\[\>svg\]\:px-4 {
        &:has(>svg) {
            padding-inline: calc(var(--spacing) * 4);
        }
    }

    .aria-invalid\:border-destructive {
        &[aria-invalid="true"] {
            border-color: var(--destructive);
        }
    }

    .aria-invalid\:ring-destructive\/20 {
        &[aria-invalid="true"] {
            --tw-ring-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
            }
        }
    }

    .md\:block {
        @media (width >=48rem) {
            display: block;
        }
    }

    .md\:grid-cols-2 {
        @media (width >=48rem) {
            grid-template-columns: repeat(2, minmax(0, 1fr));
        }
    }

    .md\:grid-cols-3 {
        @media (width >=48rem) {
            grid-template-columns: repeat(3, minmax(0, 1fr));
        }
    }

    .md\:text-sm {
        @media (width >=48rem) {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
        }
    }

    .lg\:mx-0 {
        @media (width >=64rem) {
            margin-inline: calc(var(--spacing) * 0);
        }
    }

    .lg\:block {
        @media (width >=64rem) {
            display: block;
        }
    }

    .lg\:grid-cols-2 {
        @media (width >=64rem) {
            grid-template-columns: repeat(2, minmax(0, 1fr));
        }
    }

    .lg\:grid-cols-3 {
        @media (width >=64rem) {
            grid-template-columns: repeat(3, minmax(0, 1fr));
        }
    }

    .lg\:grid-cols-4 {
        @media (width >=64rem) {
            grid-template-columns: repeat(4, minmax(0, 1fr));
        }
    }

    .lg\:justify-start {
        @media (width >=64rem) {
            justify-content: flex-start;
        }
    }

    .lg\:gap-4 {
        @media (width >=64rem) {
            gap: calc(var(--spacing) * 4);
        }
    }

    .lg\:p-6 {
        @media (width >=64rem) {
            padding: calc(var(--spacing) * 6);
        }
    }

    .lg\:px-6 {
        @media (width >=64rem) {
            padding-inline: calc(var(--spacing) * 6);
        }
    }

    .lg\:text-left {
        @media (width >=64rem) {
            text-align: left;
        }
    }

    .lg\:text-5xl {
        @media (width >=64rem) {
            font-size: var(--text-5xl) !important;
            line-height: var(--tw-leading, var(--text-5xl--line-height));
        }
    }

    .dark\:border-input {
        &:is(.dark *) {
            border-color: var(--input);
        }
    }

    .dark\:bg-destructive\/60 {
        &:is(.dark *) {
            background-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--destructive) 60%, transparent);
            }
        }
    }

    .dark\:bg-input\/30 {
        &:is(.dark *) {
            background-color: var(--input);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--input) 30%, transparent);
            }
        }
    }

    .dark\:hover\:bg-accent\/50 {
        &:is(.dark *) {
            &:hover {
                @media (hover: hover) {
                    background-color: var(--accent);

                    @supports (color: color-mix(in lab, red, red)) {
                        background-color: color-mix(in oklab, var(--accent) 50%, transparent);
                    }
                }
            }
        }
    }

    .dark\:hover\:bg-input\/50 {
        &:is(.dark *) {
            &:hover {
                @media (hover: hover) {
                    background-color: var(--input);

                    @supports (color: color-mix(in lab, red, red)) {
                        background-color: color-mix(in oklab, var(--input) 50%, transparent);
                    }
                }
            }
        }
    }

    .dark\:focus-visible\:ring-destructive\/40 {
        &:is(.dark *) {
            &:focus-visible {
                --tw-ring-color: var(--destructive);

                @supports (color: color-mix(in lab, red, red)) {
                    --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
                }
            }
        }
    }

    .dark\:aria-invalid\:ring-destructive\/40 {
        &:is(.dark *) {
            &[aria-invalid="true"] {
                --tw-ring-color: var(--destructive);

                @supports (color: color-mix(in lab, red, red)) {
                    --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
                }
            }
        }
    }

    .\[\&_svg\]\:pointer-events-none {
        & svg {
            pointer-events: none;
        }
    }

    .\[\&_svg\]\:shrink-0 {
        & svg {
            flex-shrink: 0;
        }
    }

    .\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 {
        & svg:not([class*='size-']) {
            width: calc(var(--spacing) * 4);
            height: calc(var(--spacing) * 4);
        }
    }

    .\[\.border-b\]\:pb-6 {
        &:is(.border-b) {
            padding-bottom: calc(var(--spacing) * 6);
        }
    }

    .\[\.border-t\]\:pt-6 {
        &:is(.border-t) {
            padding-top: calc(var(--spacing) * 6);
        }
    }

    .\[\&\>svg\]\:pointer-events-none {
        &>svg {
            pointer-events: none;
        }
    }

    .\[\&\>svg\]\:size-3 {
        &>svg {
            width: calc(var(--spacing) * 3);
            height: calc(var(--spacing) * 3);
        }
    }

    .\[a\&\]\:hover\:bg-accent {
        a& {
            &:hover {
                @media (hover: hover) {
                    background-color: var(--accent);
                }
            }
        }
    }

    .\[a\&\]\:hover\:bg-destructive\/90 {
        a& {
            &:hover {
                @media (hover: hover) {
                    background-color: var(--destructive);

                    @supports (color: color-mix(in lab, red, red)) {
                        background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
                    }
                }
            }
        }
    }

    .\[a\&\]\:hover\:bg-primary\/90 {
        a& {
            &:hover {
                @media (hover: hover) {
                    background-color: var(--primary);

                    @supports (color: color-mix(in lab, red, red)) {
                        background-color: color-mix(in oklab, var(--primary) 90%, transparent);
                    }
                }
            }
        }
    }

    .\[a\&\]\:hover\:bg-secondary\/90 {
        a& {
            &:hover {
                @media (hover: hover) {
                    background-color: var(--secondary);

                    @supports (color: color-mix(in lab, red, red)) {
                        background-color: color-mix(in oklab, var(--secondary) 90%, transparent);
                    }
                }
            }
        }
    }

    .\[a\&\]\:hover\:text-accent-foreground {
        a& {
            &:hover {
                @media (hover: hover) {
                    color: var(--accent-foreground);
                }
            }
        }
    }
}

@property --tw-animation-delay {
    syntax: "*";
    inherits: false;
    initial-value: 0s;
}

@property --tw-animation-direction {
    syntax: "*";
    inherits: false;
    initial-value: normal;
}

@property --tw-animation-duration {
    syntax: "*";
    inherits: false;
}

@property --tw-animation-fill-mode {
    syntax: "*";
    inherits: false;
    initial-value: forwards;
}

@property --tw-animation-iteration-count {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}

@property --tw-enter-opacity {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}

@property --tw-enter-rotate {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-enter-scale {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}

@property --tw-enter-translate-x {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-enter-translate-y {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-exit-opacity {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}

@property --tw-exit-rotate {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-exit-scale {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}

@property --tw-exit-translate-x {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-exit-translate-y {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

:root {
    --background: oklch(1 0 0);
    --foreground: oklch(0.145 0 0);
    --card: oklch(1 0 0);
    --card-foreground: oklch(0.145 0 0);
    --popover: oklch(1 0 0);
    --popover-foreground: oklch(0.145 0 0);
    --primary: oklch(0.205 0 0);
    --primary-foreground: oklch(0.985 0 0);
    --secondary: oklch(0.97 0 0);
    --secondary-foreground: oklch(0.205 0 0);
    --muted: oklch(0.97 0 0);
    --muted-foreground: oklch(0.556 0 0);
    --accent: oklch(0.97 0 0);
    --accent-foreground: oklch(0.205 0 0);
    --destructive: oklch(0.577 0.245 27.325);
    --destructive-foreground: oklch(0.577 0.245 27.325);
    --border: oklch(0.922 0 0);
    --input: oklch(0.922 0 0);
    --ring: oklch(0.708 0 0);
    --chart-1: oklch(0.646 0.222 41.116);
    --chart-2: oklch(0.6 0.118 184.704);
    --chart-3: oklch(0.398 0.07 227.392);
    --chart-4: oklch(0.828 0.189 84.429);
    --chart-5: oklch(0.769 0.188 70.08);
    --radius: 0.625rem;
    --sidebar: oklch(0.985 0 0);
    --sidebar-foreground: oklch(0.145 0 0);
    --sidebar-primary: oklch(0.205 0 0);
    --sidebar-primary-foreground: oklch(0.985 0 0);
    --sidebar-accent: oklch(0.97 0 0);
    --sidebar-accent-foreground: oklch(0.205 0 0);
    --sidebar-border: oklch(0.922 0 0);
    --sidebar-ring: oklch(0.708 0 0);
}

.dark {
    --background: oklch(0.145 0 0);
    --foreground: oklch(0.985 0 0);
    --card: oklch(0.145 0 0);
    --card-foreground: oklch(0.985 0 0);
    --popover: oklch(0.145 0 0);
    --popover-foreground: oklch(0.985 0 0);
    --primary: oklch(0.985 0 0);
    --primary-foreground: oklch(0.205 0 0);
    --secondary: oklch(0.269 0 0);
    --secondary-foreground: oklch(0.985 0 0);
    --muted: oklch(0.269 0 0);
    --muted-foreground: oklch(0.708 0 0);
    --accent: oklch(0.269 0 0);
    --accent-foreground: oklch(0.985 0 0);
    --destructive: oklch(0.396 0.141 25.723);
    --destructive-foreground: oklch(0.637 0.237 25.331);
    --border: oklch(0.269 0 0);
    --input: oklch(0.269 0 0);
    --ring: oklch(0.439 0 0);
    --chart-1: oklch(0.488 0.243 264.376);
    --chart-2: oklch(0.696 0.17 162.48);
    --chart-3: oklch(0.769 0.188 70.08);
    --chart-4: oklch(0.627 0.265 303.9);
    --chart-5: oklch(0.645 0.246 16.439);
    --sidebar: oklch(0.205 0 0);
    --sidebar-foreground: oklch(0.985 0 0);
    --sidebar-primary: oklch(0.488 0.243 264.376);
    --sidebar-primary-foreground: oklch(0.985 0 0);
    --sidebar-accent: oklch(0.269 0 0);
    --sidebar-accent-foreground: oklch(0.985 0 0);
    --sidebar-border: oklch(0.269 0 0);
    --sidebar-ring: oklch(0.439 0 0);
}

@layer base {
    * {
        border-color: var(--border);
        outline-color: var(--ring);

        @supports (color: color-mix(in lab, red, red)) {
            outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
        }
    }

    body {
        background-color: var(--background);
        color: var(--foreground);
    }
}

@property --tw-translate-x {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-translate-y {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-translate-z {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-rotate-x {
    syntax: "*";
    inherits: false;
}

@property --tw-rotate-y {
    syntax: "*";
    inherits: false;
}

@property --tw-rotate-z {
    syntax: "*";
    inherits: false;
}

@property --tw-skew-x {
    syntax: "*";
    inherits: false;
}

@property --tw-skew-y {
    syntax: "*";
    inherits: false;
}

@property --tw-space-y-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-space-x-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-divide-y-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-border-style {
    syntax: "*";
    inherits: false;
    initial-value: solid;
}

@property --tw-gradient-position {
    syntax: "*";
    inherits: false;
}

@property --tw-gradient-from {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}

@property --tw-gradient-via {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}

@property --tw-gradient-to {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}

@property --tw-gradient-stops {
    syntax: "*";
    inherits: false;
}

@property --tw-gradient-via-stops {
    syntax: "*";
    inherits: false;
}

@property --tw-gradient-from-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 0%;
}

@property --tw-gradient-via-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 50%;
}

@property --tw-gradient-to-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-leading {
    syntax: "*";
    inherits: false;
}

@property --tw-font-weight {
    syntax: "*";
    inherits: false;
}

@property --tw-tracking {
    syntax: "*";
    inherits: false;
}

@property --tw-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-shadow-color {
    syntax: "*";
    inherits: false;
}

@property --tw-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-inset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {
    syntax: "*";
    inherits: false;
}

@property --tw-inset-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-ring-color {
    syntax: "*";
    inherits: false;
}

@property --tw-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {
    syntax: "*";
    inherits: false;
}

@property --tw-inset-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-ring-inset {
    syntax: "*";
    inherits: false;
}

@property --tw-ring-offset-width {
    syntax: "<length>";
    inherits: false;
    initial-value: 0px;
}

@property --tw-ring-offset-color {
    syntax: "*";
    inherits: false;
    initial-value: #fff;
}

@property --tw-ring-offset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-outline-style {
    syntax: "*";
    inherits: false;
    initial-value: solid;
}

@property --tw-blur {
    syntax: "*";
    inherits: false;
}

@property --tw-brightness {
    syntax: "*";
    inherits: false;
}

@property --tw-contrast {
    syntax: "*";
    inherits: false;
}

@property --tw-grayscale {
    syntax: "*";
    inherits: false;
}

@property --tw-hue-rotate {
    syntax: "*";
    inherits: false;
}

@property --tw-invert {
    syntax: "*";
    inherits: false;
}

@property --tw-opacity {
    syntax: "*";
    inherits: false;
}

@property --tw-saturate {
    syntax: "*";
    inherits: false;
}

@property --tw-sepia {
    syntax: "*";
    inherits: false;
}

@property --tw-drop-shadow {
    syntax: "*";
    inherits: false;
}

@property --tw-drop-shadow-color {
    syntax: "*";
    inherits: false;
}

@property --tw-drop-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-drop-shadow-size {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-blur {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-brightness {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-contrast {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-grayscale {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-hue-rotate {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-invert {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-opacity {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-saturate {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-sepia {
    syntax: "*";
    inherits: false;
}

@property --tw-duration {
    syntax: "*";
    inherits: false;
}

@layer properties {
    @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {

        *,
        ::before,
        ::after,
        ::backdrop {
            --tw-translate-x: 0;
            --tw-translate-y: 0;
            --tw-translate-z: 0;
            --tw-rotate-x: initial;
            --tw-rotate-y: initial;
            --tw-rotate-z: initial;
            --tw-skew-x: initial;
            --tw-skew-y: initial;
            --tw-space-y-reverse: 0;
            --tw-space-x-reverse: 0;
            --tw-divide-y-reverse: 0;
            --tw-border-style: solid;
            --tw-gradient-position: initial;
            --tw-gradient-from: #0000;
            --tw-gradient-via: #0000;
            --tw-gradient-to: #0000;
            --tw-gradient-stops: initial;
            --tw-gradient-via-stops: initial;
            --tw-gradient-from-position: 0%;
            --tw-gradient-via-position: 50%;
            --tw-gradient-to-position: 100%;
            --tw-leading: initial;
            --tw-font-weight: initial;
            --tw-tracking: initial;
            --tw-shadow: 0 0 #0000;
            --tw-shadow-color: initial;
            --tw-shadow-alpha: 100%;
            --tw-inset-shadow: 0 0 #0000;
            --tw-inset-shadow-color: initial;
            --tw-inset-shadow-alpha: 100%;
            --tw-ring-color: initial;
            --tw-ring-shadow: 0 0 #0000;
            --tw-inset-ring-color: initial;
            --tw-inset-ring-shadow: 0 0 #0000;
            --tw-ring-inset: initial;
            --tw-ring-offset-width: 0px;
            --tw-ring-offset-color: #fff;
            --tw-ring-offset-shadow: 0 0 #0000;
            --tw-outline-style: solid;
            --tw-blur: initial;
            --tw-brightness: initial;
            --tw-contrast: initial;
            --tw-grayscale: initial;
            --tw-hue-rotate: initial;
            --tw-invert: initial;
            --tw-opacity: initial;
            --tw-saturate: initial;
            --tw-sepia: initial;
            --tw-drop-shadow: initial;
            --tw-drop-shadow-color: initial;
            --tw-drop-shadow-alpha: 100%;
            --tw-drop-shadow-size: initial;
            --tw-backdrop-blur: initial;
            --tw-backdrop-brightness: initial;
            --tw-backdrop-contrast: initial;
            --tw-backdrop-grayscale: initial;
            --tw-backdrop-hue-rotate: initial;
            --tw-backdrop-invert: initial;
            --tw-backdrop-opacity: initial;
            --tw-backdrop-saturate: initial;
            --tw-backdrop-sepia: initial;
            --tw-duration: initial;
            --tw-animation-delay: 0s;
            --tw-animation-direction: normal;
            --tw-animation-duration: initial;
            --tw-animation-fill-mode: forwards;
            --tw-animation-iteration-count: 1;
            --tw-enter-opacity: 1;
            --tw-enter-rotate: 0;
            --tw-enter-scale: 1;
            --tw-enter-translate-x: 0;
            --tw-enter-translate-y: 0;
            --tw-exit-opacity: 1;
            --tw-exit-rotate: 0;
            --tw-exit-scale: 1;
            --tw-exit-translate-x: 0;
            --tw-exit-translate-y: 0;
        }
    }
}